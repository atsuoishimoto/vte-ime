#!/usr/bin/make -f
# -*- mode: makefile; coding: utf-8 -*-
#

include /usr/share/cdbs/1/rules/debhelper.mk
include /usr/share/cdbs/1/rules/simple-patchsys.mk
include /usr/share/cdbs/1/rules/utils.mk
include /usr/share/cdbs/1/class/gnome.mk
include /usr/share/gnome-pkg-tools/1/rules/uploaders.mk

version := $(shell sed -n 's/Package: \(.*\)/\1/p' debian/control | head -n 1)

PY_VERSIONS = $(shell pyversions --requested debian/control)

DEB_CONFIGURE_EXTRA_FLAGS := --enable-gtk-doc
DEB_CONFIGURE_LIBEXECDIR := \$${prefix}/lib/${version}
DEB_FIXPERMS_EXCLUDE := gnome-pty-helper
DEB_DH_MAKESHLIBS_ARGS_ALL = -V 'libvte9 (>= 1:0.16.9)'

DEB_BUILDDIR := build

DEB_DBG_PACKAGE_python-vte = python-vte-dbg
DEB_COMPRESS_EXCLUDE = .py

.PRECIOUS: configure-stamp-% dbg-configure-stamp-%

configure-stamp-%:
	mkdir build-$*
	cd build-$* && PYTHON=`which $*` $(DEB_CONFIGURE_SCRIPT_ENV) \
	    $(DEB_CONFIGURE_SCRIPT) \
		$(DEB_CONFIGURE_NORMAL_ARGS) \
		--disable-maintainer-mode \
		$(cdbs_configure_flags) \
		$(DEB_CONFIGURE_EXTRA_FLAGS) \
		$(DEB_CONFIGURE_USER_FLAGS)
	touch $@

dbg-configure-stamp-%:
	mkdir dbg-build-$*
	cd dbg-build-$* && PYTHON=`which $*-dbg` $(subst -O2,-O0,$(DEB_CONFIGURE_SCRIPT_ENV)) \
	    $(DEB_CONFIGURE_SCRIPT) \
		$(DEB_CONFIGURE_NORMAL_ARGS) \
		--disable-maintainer-mode \
		$(cdbs_configure_flags) \
		$(DEB_CONFIGURE_EXTRA_FLAGS) \
		$(DEB_CONFIGURE_USER_FLAGS)
	touch $@

configure/python-vte:: $(addprefix configure-stamp-, $(PY_VERSIONS))
configure/python-vte-dbg:: $(addprefix dbg-configure-stamp-, $(PY_VERSIONS))

build-stamp-%:
	make -C build-$*
	touch $@
	cd po; intltool-update -p

dbg-build-stamp-%:
	make -C dbg-build-$*
	touch $@

build/python-vte:: $(addprefix build-stamp-, $(PY_VERSIONS))
build/python-vte-dbg:: $(addprefix dbg-build-stamp-, $(PY_VERSIONS))

install-stamp-%:
	make -C build-$* install DESTDIR=$(CURDIR)/debian/tmp

dbg-install-stamp-%:
	make -C dbg-build-$* install DESTDIR=$(CURDIR)/debian/python-vte-dbg

install/python-vte:: $(addprefix install-stamp-, $(PY_VERSIONS))

install/python-vte-dbg:: $(addprefix dbg-install-stamp-, $(PY_VERSIONS))
	for i in $$(find debian/python-*-dbg/usr/lib/py* -name '*.so'); do \
	  b=$$(basename $$i .so); \
	  mv $$i $$(dirname $$i)/$${b}_d.so; \
	done
	find debian/python-*-dbg ! -type d ! -name '*_d.so' | xargs rm -f
	find debian/python-*-dbg -depth -empty -exec rmdir {} \;

binary-install/python-vte::
	dh_pysupport -d
	find debian/python-vte -name '*.la' -exec rm {} \;
	find debian/python-vte -name '*.a' -exec rm {} \;

binary-predeb/python-vte-dbg::
	rm -rf debian/python-vte-dbg/usr/share/doc/python-vte-dbg
	ln -s python-vte debian/python-vte-dbg/usr/share/doc/python-vte-dbg

clean::
	-rm -rf $(DEB_BUILDDIR)
	-rm -rf $(addprefix build-, $(PY_VERSIONS))
	-rm -rf $(addprefix configure-stamp-, $(PY_VERSIONS))
	-rm -rf $(addprefix build-stamp-, $(PY_VERSIONS))
	rm -rf dbg-build* dbg-*-stamp-*

common-binary-fixup-arch::
	t=libvte-common; \
	for p in $$(dh_listpackages -a -N$$t); do \
	  rm -rf debian/$$p/usr/share/doc/$$p; \
	  ln -s $$t debian/$$p/usr/share/doc/$$p; \
	  if [ -f debian/$$p.docs ]; then \
	    mkdir -p debian/$$p/usr/share/doc/$$t; \
	    cp -a $$(eval echo $$(cat debian/$$p.docs)) debian/$$p/usr/share/doc/$$t/; \
	    dh_compress -p$$p; \
	  fi; \
	  ( \
	    echo "# doc dir is now a symlink to $$p"; \
	    echo 'if [ "$$1" = upgrade ] && [ ! -L /usr/share/doc/'$$p' ]; then'; \
	    echo "    rm -rf /usr/share/doc/$$p"; \
	    echo "fi"; \
	  ) >> debian/$$p.preinst.debhelper; \
	done
