<refentry id="VteReaper">
<refmeta>
<refentrytitle role="top_of_page">VteReaper</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>VTE Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>VteReaper</refname>
<refpurpose>A singleton object which catches <link linkend="SIGCHLD:CAPS"><literal>SIGCHLD</literal></link> signals and converts them into
GObject-style &quot;child-exited&quot; signals.</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>




</synopsis>
</refsynopsisdiv>









<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>
Because an application may need to be notified when child processes
exit, and because there is only one <link linkend="SIGCHLD:CAPS"><literal>SIGCHLD</literal></link> handler, the <link linkend="VteTerminal"><type>VteTerminal</type></link>
widget relies on a <link linkend="VteReaper"><type>VteReaper</type></link> to watch for <link linkend="SIGCHLD:CAPS"><literal>SIGCHLD</literal></link> notifications and
retrieve the exit status of child processes which have exited.  When
glib provides child_watch functionality, the <link linkend="VteReaper"><type>VteReaper</type></link> merely acts as
a proxy for glib's own functionality.
</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>

</refsect1>





<refsect1><refsect2 /><refsect2 /></refsect1>
</refentry>
